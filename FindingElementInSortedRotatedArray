public class FindingElementInSortedRotatedArray {

	public static int findPivot(int start,int end,int[] a){
		
		//Time = log(n)
		
        int mid = (start+end)/2;  
        
        if (a[mid]>a[mid+1]){
           return mid+1;
        }else if(a[start]>a[mid]){
        		return (findPivot(start,mid-1,a));
        }else{
        	 return (findPivot(mid+1,end,a));
          }       
    }
  
	public static int binarySearch(int[] a,int key) {
		
		//Time = log(n)
		int left = 0;
		int right = a.length;
		int mid = 0;
		int index = -1;
		while (left<right) {
			mid = (left + right)/2;
			if (a[mid]==key) {
				index = mid;
				break;
			}else if(a[mid]<key)
				left = mid+1;
			else 
				right = mid-1;
				
		}
		
		return index;
		
	}
	
	public static void main(String[] args) {
		 int n[] = {9,12,15,17,25,28,32,37,3,5,7,8};
	       int end = n.length;
	       int pivot = findPivot(0,end-1,n);
	       System.out.println("Pivot Element "+ "at Index : "+ pivot + " Element : " + n[pivot]);
	       int searchElement = 7;
	       
	       int resultArray[] = new int[end-pivot];
	       int j = pivot;
	       int len = resultArray.length;
	      
	       for (int i=0;i<len;j++,i++) {
	    	   resultArray[i]=n[j];
	    	   System.out.print(resultArray[i]+ " ");
	    	   
	       }
	       System.out.println();
	       int index = binarySearch(resultArray,searchElement);
	       if (index != -1 )
	    	   System.out.println("Elment found in resultArray at Index : " + index + " Value : " + resultArray[index]);
	       else
	    	   System.out.println("Elment not found in resultArray");
	       
	       //Total time = log(n) + log(n) = 2log(n)
	}	

}
